/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { IIngredient } from "./interfaces/IIngredient";
import { IRecipeInputs } from "./interfaces/IRecipeInputs";
export namespace Components {
    interface AppHome {
    }
    interface AppRecipeAdd {
    }
    interface AppRecipeEdit {
    }
    interface AppRecipeInfo {
    }
    interface AppRecipeList {
    }
    interface AppRoot {
    }
    interface AppUserProfile {
    }
    interface CategoryChips {
    }
    interface IngredientDetails {
        "amount": any;
        "calories": any;
        "carbs": any;
        "color": any;
        "fat": any;
        "name": any;
        "protein": any;
    }
    interface IngredientsInputs {
        "ingredients": IIngredient[];
    }
    interface MacroDetails {
        "carbs": any;
        "fat": any;
        "protein": any;
    }
    interface RecipeInputs {
        "category": string;
        "name": string;
    }
    interface RecipeItem {
        "calories": number;
        "image": string;
        "name": string;
    }
    interface StepDetails {
        "color": string;
        "step": string;
    }
    interface StepsInputs {
        "steps": string[];
    }
    interface UtensilDetails {
        "color": any;
        "utensil": any;
    }
    interface UtensilsInputs {
        "utensils": string[];
    }
}
declare global {
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppRecipeAddElement extends Components.AppRecipeAdd, HTMLStencilElement {
    }
    var HTMLAppRecipeAddElement: {
        prototype: HTMLAppRecipeAddElement;
        new (): HTMLAppRecipeAddElement;
    };
    interface HTMLAppRecipeEditElement extends Components.AppRecipeEdit, HTMLStencilElement {
    }
    var HTMLAppRecipeEditElement: {
        prototype: HTMLAppRecipeEditElement;
        new (): HTMLAppRecipeEditElement;
    };
    interface HTMLAppRecipeInfoElement extends Components.AppRecipeInfo, HTMLStencilElement {
    }
    var HTMLAppRecipeInfoElement: {
        prototype: HTMLAppRecipeInfoElement;
        new (): HTMLAppRecipeInfoElement;
    };
    interface HTMLAppRecipeListElement extends Components.AppRecipeList, HTMLStencilElement {
    }
    var HTMLAppRecipeListElement: {
        prototype: HTMLAppRecipeListElement;
        new (): HTMLAppRecipeListElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLAppUserProfileElement extends Components.AppUserProfile, HTMLStencilElement {
    }
    var HTMLAppUserProfileElement: {
        prototype: HTMLAppUserProfileElement;
        new (): HTMLAppUserProfileElement;
    };
    interface HTMLCategoryChipsElement extends Components.CategoryChips, HTMLStencilElement {
    }
    var HTMLCategoryChipsElement: {
        prototype: HTMLCategoryChipsElement;
        new (): HTMLCategoryChipsElement;
    };
    interface HTMLIngredientDetailsElement extends Components.IngredientDetails, HTMLStencilElement {
    }
    var HTMLIngredientDetailsElement: {
        prototype: HTMLIngredientDetailsElement;
        new (): HTMLIngredientDetailsElement;
    };
    interface HTMLIngredientsInputsElement extends Components.IngredientsInputs, HTMLStencilElement {
    }
    var HTMLIngredientsInputsElement: {
        prototype: HTMLIngredientsInputsElement;
        new (): HTMLIngredientsInputsElement;
    };
    interface HTMLMacroDetailsElement extends Components.MacroDetails, HTMLStencilElement {
    }
    var HTMLMacroDetailsElement: {
        prototype: HTMLMacroDetailsElement;
        new (): HTMLMacroDetailsElement;
    };
    interface HTMLRecipeInputsElement extends Components.RecipeInputs, HTMLStencilElement {
    }
    var HTMLRecipeInputsElement: {
        prototype: HTMLRecipeInputsElement;
        new (): HTMLRecipeInputsElement;
    };
    interface HTMLRecipeItemElement extends Components.RecipeItem, HTMLStencilElement {
    }
    var HTMLRecipeItemElement: {
        prototype: HTMLRecipeItemElement;
        new (): HTMLRecipeItemElement;
    };
    interface HTMLStepDetailsElement extends Components.StepDetails, HTMLStencilElement {
    }
    var HTMLStepDetailsElement: {
        prototype: HTMLStepDetailsElement;
        new (): HTMLStepDetailsElement;
    };
    interface HTMLStepsInputsElement extends Components.StepsInputs, HTMLStencilElement {
    }
    var HTMLStepsInputsElement: {
        prototype: HTMLStepsInputsElement;
        new (): HTMLStepsInputsElement;
    };
    interface HTMLUtensilDetailsElement extends Components.UtensilDetails, HTMLStencilElement {
    }
    var HTMLUtensilDetailsElement: {
        prototype: HTMLUtensilDetailsElement;
        new (): HTMLUtensilDetailsElement;
    };
    interface HTMLUtensilsInputsElement extends Components.UtensilsInputs, HTMLStencilElement {
    }
    var HTMLUtensilsInputsElement: {
        prototype: HTMLUtensilsInputsElement;
        new (): HTMLUtensilsInputsElement;
    };
    interface HTMLElementTagNameMap {
        "app-home": HTMLAppHomeElement;
        "app-recipe-add": HTMLAppRecipeAddElement;
        "app-recipe-edit": HTMLAppRecipeEditElement;
        "app-recipe-info": HTMLAppRecipeInfoElement;
        "app-recipe-list": HTMLAppRecipeListElement;
        "app-root": HTMLAppRootElement;
        "app-user-profile": HTMLAppUserProfileElement;
        "category-chips": HTMLCategoryChipsElement;
        "ingredient-details": HTMLIngredientDetailsElement;
        "ingredients-inputs": HTMLIngredientsInputsElement;
        "macro-details": HTMLMacroDetailsElement;
        "recipe-inputs": HTMLRecipeInputsElement;
        "recipe-item": HTMLRecipeItemElement;
        "step-details": HTMLStepDetailsElement;
        "steps-inputs": HTMLStepsInputsElement;
        "utensil-details": HTMLUtensilDetailsElement;
        "utensils-inputs": HTMLUtensilsInputsElement;
    }
}
declare namespace LocalJSX {
    interface AppHome {
    }
    interface AppRecipeAdd {
    }
    interface AppRecipeEdit {
    }
    interface AppRecipeInfo {
    }
    interface AppRecipeList {
    }
    interface AppRoot {
    }
    interface AppUserProfile {
    }
    interface CategoryChips {
        "onCategoryCompleted"?: (event: CustomEvent<string>) => void;
    }
    interface IngredientDetails {
        "amount"?: any;
        "calories"?: any;
        "carbs"?: any;
        "color"?: any;
        "fat"?: any;
        "name"?: any;
        "protein"?: any;
    }
    interface IngredientsInputs {
        "ingredients"?: IIngredient[];
        "onIngredientsInputData"?: (event: CustomEvent<IIngredient[]>) => void;
    }
    interface MacroDetails {
        "carbs"?: any;
        "fat"?: any;
        "protein"?: any;
    }
    interface RecipeInputs {
        "category"?: string;
        "name"?: string;
        "onRecipeInputData"?: (event: CustomEvent<IRecipeInputs>) => void;
    }
    interface RecipeItem {
        "calories"?: number;
        "image"?: string;
        "name"?: string;
    }
    interface StepDetails {
        "color"?: string;
        "step"?: string;
    }
    interface StepsInputs {
        "onStepsInputData"?: (event: CustomEvent<string[]>) => void;
        "steps"?: string[];
    }
    interface UtensilDetails {
        "color"?: any;
        "utensil"?: any;
    }
    interface UtensilsInputs {
        "onUtensilInputData"?: (event: CustomEvent<string[]>) => void;
        "utensils"?: string[];
    }
    interface IntrinsicElements {
        "app-home": AppHome;
        "app-recipe-add": AppRecipeAdd;
        "app-recipe-edit": AppRecipeEdit;
        "app-recipe-info": AppRecipeInfo;
        "app-recipe-list": AppRecipeList;
        "app-root": AppRoot;
        "app-user-profile": AppUserProfile;
        "category-chips": CategoryChips;
        "ingredient-details": IngredientDetails;
        "ingredients-inputs": IngredientsInputs;
        "macro-details": MacroDetails;
        "recipe-inputs": RecipeInputs;
        "recipe-item": RecipeItem;
        "step-details": StepDetails;
        "steps-inputs": StepsInputs;
        "utensil-details": UtensilDetails;
        "utensils-inputs": UtensilsInputs;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-recipe-add": LocalJSX.AppRecipeAdd & JSXBase.HTMLAttributes<HTMLAppRecipeAddElement>;
            "app-recipe-edit": LocalJSX.AppRecipeEdit & JSXBase.HTMLAttributes<HTMLAppRecipeEditElement>;
            "app-recipe-info": LocalJSX.AppRecipeInfo & JSXBase.HTMLAttributes<HTMLAppRecipeInfoElement>;
            "app-recipe-list": LocalJSX.AppRecipeList & JSXBase.HTMLAttributes<HTMLAppRecipeListElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "app-user-profile": LocalJSX.AppUserProfile & JSXBase.HTMLAttributes<HTMLAppUserProfileElement>;
            "category-chips": LocalJSX.CategoryChips & JSXBase.HTMLAttributes<HTMLCategoryChipsElement>;
            "ingredient-details": LocalJSX.IngredientDetails & JSXBase.HTMLAttributes<HTMLIngredientDetailsElement>;
            "ingredients-inputs": LocalJSX.IngredientsInputs & JSXBase.HTMLAttributes<HTMLIngredientsInputsElement>;
            "macro-details": LocalJSX.MacroDetails & JSXBase.HTMLAttributes<HTMLMacroDetailsElement>;
            "recipe-inputs": LocalJSX.RecipeInputs & JSXBase.HTMLAttributes<HTMLRecipeInputsElement>;
            "recipe-item": LocalJSX.RecipeItem & JSXBase.HTMLAttributes<HTMLRecipeItemElement>;
            "step-details": LocalJSX.StepDetails & JSXBase.HTMLAttributes<HTMLStepDetailsElement>;
            "steps-inputs": LocalJSX.StepsInputs & JSXBase.HTMLAttributes<HTMLStepsInputsElement>;
            "utensil-details": LocalJSX.UtensilDetails & JSXBase.HTMLAttributes<HTMLUtensilDetailsElement>;
            "utensils-inputs": LocalJSX.UtensilsInputs & JSXBase.HTMLAttributes<HTMLUtensilsInputsElement>;
        }
    }
}
